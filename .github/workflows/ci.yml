name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./todo-app
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Install dependencies
      run: npm install

    - name: Run Jest tests
      run: npm test

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps

    - name: Run Application
      run: |
        npm run build
        npm run start &

    - name: Wait for application to start
      run: sleep 60 # Wait 60 seconds for the server to start

    - name: Run Playwright tests
      run: npm run test:e2e

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Create gitleaks config
        run: |
          echo '[allowlist]
          description = "Allowlist for non-sensitive data"
          paths = [
            "todo-app/package-lock.json",
            ".github/workflows/ci.yml"
          ]' > .gitleaks.toml

      - name: Secret Scanning (Gitleaks)
        uses: gitleaks/gitleaks-action@v2
        with:
          config_path: .gitleaks.toml
          report_format: sarif
          report_path: gitleaks-report.sarif
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: SAST Scan (Semgrep)
        uses: semgrep/semgrep-action@v1
        with:
          generateSarif: true

      - name: Run Application for DAST
        run: |
          cd todo-app
          npm install
          npm run build
          npm run start &
          cd ..

      - name: Wait for application to start
        run: sleep 60 # Wait 60 seconds for the server to start

      - name: DAST Scan (OWASP ZAP)
        uses: zaproxy/action-baseline@v0.7.0
        with:
          target: 'http://localhost:3000'
          rules_file_name: 'rules.tsv'
          gen_file: 'report.html'

      - name: Upload DAST Report
        uses: actions/upload-artifact@v4
        if: always() # Upload the report even if the scan fails
        with:
          name: zap-report
          path: report.html
